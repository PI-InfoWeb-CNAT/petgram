@model Aplicação.Models.Postagem

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Publicar</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <style>
        #petgramlogo {
            margin-left: 15px;
        }
    </style>
</head>
<body>
    <div class='nav-brand' id='petgramlogo'>
        <a href='/Home'>
            <img src='https://github.com/PI-InfoWeb-CNAT/petgram/blob/main/images/logo.jpeg?raw=true' alt='Logo PetGram' width="100px">
        </a>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm("Publicar", "Postagem", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Postagem</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Visibilidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Visibilidade, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Visibilidade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Filtro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Filtro, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Filtro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-offset-7 col-md-5">
        <div class="form-group">
            @Html.TextBox("imagem", "", new { type = "file" }) <br />
        </div>
    </div>

    @Html.HiddenFor(m => m.Data, new { Data = ViewBag.Data })
    @Html.HiddenFor(m => m.UserID, new { UserID = ViewBag.UserID })
    @Html.HiddenFor(model => model.ImagemMimeType)
    @Html.HiddenFor(model => model.Imagem)
    @Html.HiddenFor(model => model.Likes)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Voltar ao feed", "Feed", "Home", new { UserID = ViewBag.UserID }, null)
    </div>
</body>
</html>